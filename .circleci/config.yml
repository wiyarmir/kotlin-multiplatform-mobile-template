defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/openjdk:8-jdk
  environment:
    JVM_OPTS: -Xmx3200m
    GRADLE_OPTS: '-Dorg.gradle.daemon=false'
    _JAVA_OPTIONS: "-Xms256m -Xmx1280m -XX:MaxPermSize=350m"

version: 2
jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run:
          name: Lint project
          command: ./gradlew -Porg.gradle.project.buildAndroid=false detekt
      - save_cache:
          paths:
            - ~/.gradle
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run:
          name: Save detekt results
          command: |
            mkdir -p ~/detekt/
            find . -type f -regex ".*/build/reports/detekt/*" -exec cp {} ~/detekt/ \;
          when: always
      - store_test_results:
          path: ~/detekt
      - store_artifacts:
          path: ~/detekt

  build-android:
    <<: *defaults
    docker:
      - image: circleci/android:api-29
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "android/build.gradle" }}
      - run:
          name: Run checks
          command: ./gradlew -Porg.gradle.project.buildAndroid=true :android:testDebugUnitTest :android:detekt :android:lintDebug
      - run:
          name: Build Application
          command: ./gradlew -Porg.gradle.project.buildAndroid=true :android:assemble
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "android/build.gradle" }}
      - store_artifacts:
          path: android/build/outputs/apk
          destination: apk
      - store_artifacts:
          path: android/build/reports
          destination: reports
      - store_test_results:
          path: android/build/test-results

  build-ios:
    macos:
      xcode: "11.5.0"
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: tests
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.5" > ~/.ruby-version
      - restore_cache:
          key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
          key: gems-{{ checksum "ios/Gemfile.lock" }}
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat ios/Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            sudo gem install bundler
      - run: cd ios && bundle check || bundle install --path vendor/bundle
          command: sudo gem install bundler -v "$(grep -A 1 "BUNDLED WITH" ios/Gemfile.lock | tail -n 1)"
      - run:
          name: Run Bundler
          command: cd ios && bundle check || bundle install
      - save_cache:
          key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
          key: gems-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor/bundle
      - restore_cache:
          key: pods-{{ checksum "ios/Podfile.lock" }}
      - run:
          name: Pod install
          command: cd ios && bundle exec pod install
      - save_cache:
          key: pods-{{ checksum "ios/Podfile.lock" }}
          paths:
            - ios/Pods
      - restore_cache:
          key: gradle-{{ checksum "build.gradle" }}-{{ checksum "common/build.gradle" }}
      - run:
          name: fastlane
          command: cd ios && bundle exec fastlane ios $FASTLANE_LANE --verbose
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}-{{ checksum "common/build.gradle" }}
      - store_artifacts:
          path: ios/output/
      - store_test_results:
          path: ios/output/scan
  swiftlint:
    docker:
      - image: dantoml/swiftlint:latest
    steps:
      - checkout
      - run: swiftlint lint --reporter junit | tee result.xml
      - store_artifacts:
          path: result.xml
      - store_test_results:
          path: result.xml

workflows:
  version: 2
  pr-checks:
    jobs:
      - lint
      #      - swiftlint
      - build-android
      - build-ios
